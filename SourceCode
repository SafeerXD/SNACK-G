import pygame
import sys
import random
from pygame.math import Vector2


class SNACK:
    def __init__(self):
        self.body = [Vector2(5,10),Vector2(6,10),Vector2(7,10)]
        self.direction = Vector2(1,0)
        self.new_block = False
    def draw_snack(self):
        for block in self.body:
            x_pos = int(block.x * cell_size)
            y_pos = int(block.y * cell_size)
            block_rect = pygame.Rect(x_pos, y_pos, cell_size, cell_size)
            pygame.draw.rect(screen,(183,191,50),block_rect)

    def move_snack(self):
       if self.new_block == True:
           body_copy = self.body[:]
           body_copy.insert(0, body_copy[0] + self.direction)
           self.body = body_copy[:]
           self.new_block = False
       else:
           body_copy = self.body[:-1]
           body_copy.insert(0, body_copy[0] + self.direction)
           self.body = body_copy[:]

    def add_block(self):
        self.new_block = True




class FRUIT:
    def __init__(self):
        self.randomize()

    def draw_fruit(self):
        food_rect = pygame.Rect(int(self.pos.x * cell_size), int(self.pos.y * cell_size),cell_size,cell_size)
        pygame.draw.rect(screen,(160,0,5) ,food_rect)

    def randomize(self):
        self.x = random.randint(0, cell_num - 1)
        self.y = random.randint(0, cell_num - 1)
        self.pos = Vector2(self.x, self.y)

class MAIN:
    def __init__(self):
        self.snack = SNACK()
        self.fruit = FRUIT()

    def update(self):
        self.snack.move_snack()
        self.check_collition()
    def draw_elements(self):
        self.fruit.draw_fruit()
        self.snack.draw_snack()

    def check_collition(self):
        if self.fruit.pos == self.snack.body[0]:
            self.fruit.randomize()
            self.snack.add_block()


pygame.init()
cell_size = 30
cell_num = 20
screen = pygame.display.set_mode((cell_size * cell_num, cell_size * cell_num))
clock = pygame.time.Clock()
pygame.display.set_caption("My Game")

screen_Update = pygame.USEREVENT
pygame.time.set_timer(screen_Update,150)

Main_game = MAIN()

while True:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            sys.exit()
        if event.type == screen_Update:
            Main_game.update()
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_UP:
                Main_game.snack.direction = Vector2(0,-1)
            if event.key == pygame.K_DOWN:
                Main_game.snack.direction = Vector2(0, 1)
            if event.key == pygame.K_RIGHT:
                Main_game.snack.direction = Vector2(1, 0)
            if event.key == pygame.K_LEFT:
                Main_game.snack.direction = Vector2(-1, 0)



    screen.fill((255,25,50))
    Main_game.draw_elements()
    pygame.display.update()
    clock.tick(60)
